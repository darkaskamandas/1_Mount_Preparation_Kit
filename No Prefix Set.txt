using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Result
{

    /*
     * Complete the 'noPrefix' function below.
     *
     * The function accepts STRING_ARRAY words as parameter.
     */

    public static void noPrefix(List<string> words)
    {
        var Set=new MultiEntry(words[0],1);
        for(int i=1;i<words.Count;i++)
        {
            if(!Set.CheckAndAdd(words[i]))
            {
                Console.WriteLine("BAD SET");
                Console.WriteLine(words[i]);
                return;
            }
        }
        Console.WriteLine("GOOD SET");
    }
    
    abstract class IEntry{}
    class MultiEntry : IEntry
    {
        IEntry[] arr;
        int level;
        
        public MultiEntry(string s, int Level)
        {
            level=Level;
            arr=new IEntry[10];
            arr[s[Level-1]-'a']=new Entry(s);
        }
        
        public bool CheckAndAdd(string s)
        {
            int n=s[level-1]-'a';
            var item=arr[n];
            if(item==null)
            {
                arr[n]=new Entry(s);
                return true;
            }
            if(s.Length==level)return false;
            var eitem=item as Entry;
            if(eitem != null)
            {
                if(eitem.s.Length==level)return false;
                var nitem=new MultiEntry(eitem.s,level+1);
                arr[n]=nitem;
                return nitem.CheckAndAdd(s);
            }
            else
            {
                return (arr[n] as MultiEntry).CheckAndAdd(s);
            }
        }
    }
    class Entry : IEntry
    {
        public string s;
        public Entry(string S)
        {
            s=S;
        }
    }
}

class Solution
{
    public static void Main(string[] args)
    {
        int n = Convert.ToInt32(Console.ReadLine().Trim());

        List<string> words = new List<string>();

        for (int i = 0; i < n; i++)
        {
            string wordsItem = Console.ReadLine();
            words.Add(wordsItem);
        }

        Result.noPrefix(words);
    }
}
