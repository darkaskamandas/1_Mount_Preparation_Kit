using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Result
{

    /*
     * Complete the 'sumXor' function below.
     *
     * The function is expected to return a LONG_INTEGER.
     * The function accepts LONG_INTEGER n as parameter.
     */

    public static long sumXor(long n)
    {
        var z=ZerosN(n);
        return (long)1<<z;
    }
    static int ZerosN(long n)
    {
        ulong u=(ulong)n;
        ulong b=((ulong)1)<<63;
        int i=0;
        for(;i<63;i++)
        {
            if((u&b)!=0)break;
            b>>=1;
        }
        var zeros=0;
        for(;i<63;i++)
        {
            b>>=1;
            if((u&b)==0)zeros++;
        }
        return zeros;
    }
}

class Solution
{
    public static void Main(string[] args)
    {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        long n = Convert.ToInt64(Console.ReadLine().Trim());

        long result = Result.sumXor(n);

        textWriter.WriteLine(result);

        textWriter.Flush();
        textWriter.Close();
    }
}
