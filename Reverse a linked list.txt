

class Result
{

    /*
     * Complete the 'reverse' function below.
     *
     * The function is expected to return an INTEGER_SINGLY_LINKED_LIST.
     * The function accepts INTEGER_SINGLY_LINKED_LIST llist as parameter.
     */

    /*
     * For your reference:
     *
     * SinglyLinkedListNode
     * {
     *     int data;
     *     SinglyLinkedListNode next;
     * }
     *
     */
}
    static SinglyLinkedListNode reverse(SinglyLinkedListNode llist)
    {
        var all=new List<int>();
        while(llist!=null)
        {
            all.Add(llist.data);
            llist=llist.next;
        }
        var n0=new SinglyLinkedListNode(all[all.Count-1]);
        var node=n0;
        for(int i=all.Count-2;i>=0;i--)
        {
            var n=new SinglyLinkedListNode(all[i]);
            node.next=n;
            node=n;
        }
        return n0;
    }




