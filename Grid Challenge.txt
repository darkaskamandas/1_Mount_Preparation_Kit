using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Result
{

    /*
     * Complete the 'gridChallenge' function below.
     *
     * The function is expected to return a STRING.
     * The function accepts STRING_ARRAY grid as parameter.
     */

    public static string gridChallenge(List<string> grid)
    {
        for(int i = 0; i < grid.Count; i++)
        {
            if(!IsSorted(grid[i]))
            {
                grid[i]=Sort(grid[i]);
            }
        }
        if(IsSorted(grid)){
            return "YES";
        }
        else return "NO";
    }
    static bool IsSorted(string s)
    {
        for(int i=1;i<s.Length;i++)
        {
            if(s[i]<s[i-1])return false;
        }
        return true;
    }
    static string Sort(string s)
    {
        var arr=new char[s.Length];
        for(int i=0;i<s.Length;i++)
        {
            arr[i]=s[i];
        }
        Array.Sort(arr);
        return new String(arr);
    }
    static bool IsSorted(List<string> arr)
    {
        var n=arr[0].Length;
        for(int i = 0; i < n; i++)
        {
            for(int j = 1; j < arr.Count; j++)
            {
                if(arr[j][i]<arr[j-1][i])return false;
            }        
        }
        return true;
    }
}

class Solution
{
    public static void Main(string[] args)
    {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        int t = Convert.ToInt32(Console.ReadLine().Trim());

        for (int tItr = 0; tItr < t; tItr++)
        {
            int n = Convert.ToInt32(Console.ReadLine().Trim());

            List<string> grid = new List<string>();

            for (int i = 0; i < n; i++)
            {
                string gridItem = Console.ReadLine();
                grid.Add(gridItem);
            }

            string result = Result.gridChallenge(grid);

            textWriter.WriteLine(result);
        }

        textWriter.Flush();
        textWriter.Close();
    }
}
